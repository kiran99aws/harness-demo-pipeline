pipeline:
  name: Demo-Scanning-Pipeline
  identifier: DemoScanningPipeline
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: githubkiran99aws
        repoName: harness-demo-pipeline
        build: <+input>
  stages:
    - stage:
        name: Clone-Pipeline-Repo
        identifier: ClonePipelineRepo
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - parallel:
                  - step:
                      type: GitClone
                      name: GitClone_1
                      identifier: GitClone_1
                      spec:
                        connectorRef: githubkiran99aws
                        repoName: harness-template-repo
                        cloneDirectory: /harness/harness-template-repo
                        build:
                          type: branch
                          spec:
                            branch: main
                  - step:
                      type: GitClone
                      name: GitClone_2
                      identifier: GitClone_2
                      spec:
                        connectorRef: githubkiran99aws
                        repoName: harness-target-repo
                        cloneDirectory: /harness/harness-target-repo
                        build:
                          type: branch
                          spec:
                            branch: main
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    shell: Bash
                    command: |-
                      echo HOSTNAME=`hostname` && echo $HOSTNAME
                      rm -rf /harness/harness-template-repo/.git*
                      echo "These are the contents of template repo" \n && ls -la /harness/harness-template-repo
                      cp -prf /harness/harness-template-repo/* /harness/harness-target-repo/
                      echo "These are the contents of target repo" \n && ls -la /harness/harness-target-repo
                      cd /harness/harness-target-repo
                      git add -A && git status && git commit -m "Updating from Template Repo"
