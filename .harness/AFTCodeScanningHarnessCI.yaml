pipeline:
  name: AFTCodeScanning-HarnessCI
  identifier: AFTCodeScanningHarnessCI
  projectIdentifier: AWSIAC
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GITPrivateKiran99aws
        repoName: harness-demo-pipeline
        build: <+input>
  stages:
    - stage:
        name: GitClone-1
        identifier: GitClone1
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: RUN-GIT-Public-Fetch
                  identifier: Run_2
                  spec:
                    shell: Bash
                    command: |-
                      echo "Hello World!"
                      git --version
                      echo 'echo "$API_KEY"' > gitpassword.sh
                      chmod +x gitpassword.sh
                      GIT_ASKPASS=/harness/gitpassword.sh git clone https://github.com/kiran99aws/test-repository.git
                      cd test-repository
                      ls
                      cat README.md

                      # Pull code for aws public GIT Repo
                      echo "Pulling Code"
                      git remote add upstream https://github.com/aws-ia/terraform-aws-control_tower_account_factory.git
                      git fetch upstream
                      git checkout -b public-master-<+pipeline.sequenceId> upstream/main
                    envVariables:
                      API_KEY: <+secrets.getValue("ghpat")
              - step:
                  type: Bandit
                  name: Bandit_1
                  identifier: Bandit_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      workspace: /harness/test-repository
                      detection: auto
                    advanced:
                      log:
                        level: info
              - step:
                  type: Run
                  name: RUN-GIT_PUSH
                  identifier: Run_1
                  spec:
                    shell: Bash
                    command: |-
                      git config --global user.email "kiran99aws@gmail.com"
                      git config --global user.name "Kiran Nare"

                      echo "Hello World!"
                      git --version
                      echo 'echo "$API_KEY"' > gitpassword.sh
                      chmod +x gitpassword.sh
                      GIT_ASKPASS=/harness/gitpassword.sh git push origin public-master-<+pipeline.sequenceId>
                    envVariables:
                      API_KEY: <+secrets.getValue("ghpat")>
        variables:
          - name: STG_VAR
            type: String
            description: ""
            required: false
            value: <+secrets.getValue("kiran99aws-pat")>
